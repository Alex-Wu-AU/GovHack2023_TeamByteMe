# -*- coding: utf-8 -*-
"""Email Phishing Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZyzeEpBgp881vaNwEd26HNOE7VtpvNwc

Importing Libraries
"""

import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import KFold
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

"""# Data Preview"""

data = pd.read_csv('/content/Phishing_Email.csv', encoding='latin-1')
print(data.head())
data = data.drop(['Unnamed: 0'], axis = 1)
data.dropna(inplace=True)
print(data.head())
print(data['Email Type'].value_counts())

"""# Report Printing Function"""

# function to print result
def print_report(y_val, y_pred, fold):
    print(f'Fold: {fold}')
    print(f'Accuracy Score: {accuracy_score(y_val, y_pred)}')
    print(f'Confusion Matrix: \n {confusion_matrix(y_val, y_pred)}')
    print(f'Classification Report: \n {classification_report(y_val, y_pred)}')

"""# TF-IDF Vectorization"""

label_encoder = LabelEncoder()
T_vectorizer = TfidfVectorizer(sublinear_tf=True, ngram_range=(1, 2), max_features=5000)

X = data['Email Text'].values
y = data['Email Type'].values

for i in range(len(y)):
  if y[i] == 'Phishing Email':
    y[i] = 1
  else:
    y[i] = 0

X = T_vectorizer.fit_transform(X)
y = label_encoder.fit_transform(y)

"""# ML Model - Random Forest



"""

num_folds = 3
kfold = KFold(n_splits=num_folds, shuffle=True, random_state=42)

print(X.shape, y.shape)

"""Classification using RandomForest"""

fold = 1

#splitting dataset
for train_index, val_index in kfold.split(X):
  X_train, X_val = X[train_index], X[val_index]
  y_train, y_val = y[train_index], y[val_index]

  model = RandomForestClassifier(n_estimators=500, max_features=0.15, n_jobs=-1, random_state=42)
  model.fit(X_train, y_train)
  y_pred = model.predict(X_val)

  print_report(y_val, y_pred, fold)
  fold += 1

"""Reference:

Phishing Email Classification, VU TRONG HOA, https://www.kaggle.com/code/vutronghoa/phishing-email-classification/notebook
"""